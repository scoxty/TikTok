// Code generated by goctl. DO NOT EDIT.
// Source: interaction.proto

package interaction

import (
	"context"

	___interaction"github.com/sunflower10086/TikTok/interaction/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CommentActionReq  = ___interaction.CommentActionReq
	CommentActionResp = ___interaction.CommentActionResp
	CommentListReq    = ___interaction.CommentListReq
	CommentListResp   = ___interaction.CommentListResp
	Empty             = ___interaction.Empty
	FavoriteActionReq = ___interaction.FavoriteActionReq
	FavoriteListReq   = ___interaction.FavoriteListReq
	FavoriteListResp  = ___interaction.FavoriteListResp
	User              = ___interaction.User

	Interaction interface {
		FavoriteAction(ctx context.Context, in *FavoriteActionReq, opts ...grpc.CallOption) (*Empty, error)
		FavoriteList(ctx context.Context, in *FavoriteListReq, opts ...grpc.CallOption) (*FavoriteListResp, error)
		CommentAction(ctx context.Context, in *CommentActionReq, opts ...grpc.CallOption) (*CommentActionResp, error)
		CommentList(ctx context.Context, in *CommentListReq, opts ...grpc.CallOption) (*CommentListResp, error)
	}

	defaultInteraction struct {
		cli zrpc.Client
	}
)

func NewInteraction(cli zrpc.Client) Interaction {
	return &defaultInteraction{
		cli: cli,
	}
}

func (m *defaultInteraction) FavoriteAction(ctx context.Context, in *FavoriteActionReq, opts ...grpc.CallOption) (*Empty, error) {
	client := ___interaction.NewInteractionClient(m.cli.Conn())
	return client.FavoriteAction(ctx, in, opts...)
}

func (m *defaultInteraction) FavoriteList(ctx context.Context, in *FavoriteListReq, opts ...grpc.CallOption) (*FavoriteListResp, error) {
	client := ___interaction.NewInteractionClient(m.cli.Conn())
	return client.FavoriteList(ctx, in, opts...)
}

func (m *defaultInteraction) CommentAction(ctx context.Context, in *CommentActionReq, opts ...grpc.CallOption) (*CommentActionResp, error) {
	client := ___interaction.NewInteractionClient(m.cli.Conn())
	return client.CommentAction(ctx, in, opts...)
}

func (m *defaultInteraction) CommentList(ctx context.Context, in *CommentListReq, opts ...grpc.CallOption) (*CommentListResp, error) {
	client := ___interaction.NewInteractionClient(m.cli.Conn())
	return client.CommentList(ctx, in, opts...)
}
