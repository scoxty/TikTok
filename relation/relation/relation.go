// Code generated by goctl. DO NOT EDIT.
// Source: relation.proto

package relation

import (
	"context"

	___relation "github.com/sunflower10086/TikTok/relation/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ActionRequest         = ___relation.ActionRequest
	Empty                 = ___relation.Empty
	FollowListRequest     = ___relation.FollowListRequest
	FollowListResponse    = ___relation.FollowListResponse
	FollowerListRequest   = ___relation.FollowerListRequest
	FollowerListResponse  = ___relation.FollowerListResponse
	FriendListRequest     = ___relation.FriendListRequest
	FriendListResponse    = ___relation.FriendListResponse
	FriendUser            = ___relation.FriendUser
	Message               = ___relation.Message
	MessageActionRequest  = ___relation.MessageActionRequest
	MessageActionResponse = ___relation.MessageActionResponse
	MessageChatRequest    = ___relation.MessageChatRequest
	MessageChatResponse   = ___relation.MessageChatResponse
	User                  = ___relation.User

	Relation interface {
		Action(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (*Empty, error)
		FollowList(ctx context.Context, in *FollowListRequest, opts ...grpc.CallOption) (*FollowListResponse, error)
		FollowerList(ctx context.Context, in *FollowerListRequest, opts ...grpc.CallOption) (*FollowerListResponse, error)
		FriendList(ctx context.Context, in *FriendListRequest, opts ...grpc.CallOption) (*FriendListResponse, error)
		MessageChat(ctx context.Context, in *MessageChatRequest, opts ...grpc.CallOption) (*MessageChatResponse, error)
		MessageAction(ctx context.Context, in *MessageActionRequest, opts ...grpc.CallOption) (*MessageActionResponse, error)
	}

	defaultRelation struct {
		cli zrpc.Client
	}
)

func NewRelation(cli zrpc.Client) Relation {
	return &defaultRelation{
		cli: cli,
	}
}

func (m *defaultRelation) Action(ctx context.Context, in *ActionRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := ___relation.NewRelationClient(m.cli.Conn())
	return client.Action(ctx, in, opts...)
}

func (m *defaultRelation) FollowList(ctx context.Context, in *FollowListRequest, opts ...grpc.CallOption) (*FollowListResponse, error) {
	client := ___relation.NewRelationClient(m.cli.Conn())
	return client.FollowList(ctx, in, opts...)
}

func (m *defaultRelation) FollowerList(ctx context.Context, in *FollowerListRequest, opts ...grpc.CallOption) (*FollowerListResponse, error) {
	client := ___relation.NewRelationClient(m.cli.Conn())
	return client.FollowerList(ctx, in, opts...)
}

func (m *defaultRelation) FriendList(ctx context.Context, in *FriendListRequest, opts ...grpc.CallOption) (*FriendListResponse, error) {
	client := ___relation.NewRelationClient(m.cli.Conn())
	return client.FriendList(ctx, in, opts...)
}

func (m *defaultRelation) MessageChat(ctx context.Context, in *MessageChatRequest, opts ...grpc.CallOption) (*MessageChatResponse, error) {
	client := ___relation.NewRelationClient(m.cli.Conn())
	return client.MessageChat(ctx, in, opts...)
}

func (m *defaultRelation) MessageAction(ctx context.Context, in *MessageActionRequest, opts ...grpc.CallOption) (*MessageActionResponse, error) {
	client := ___relation.NewRelationClient(m.cli.Conn())
	return client.MessageAction(ctx, in, opts...)
}
